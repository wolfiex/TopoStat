{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f39d147b",
   "metadata": {},
   "outputs": [],
   "source": [
    "'''\n",
    "!conda install --channel conda-forge geopandas --yes\n",
    "\n",
    "A script to extract useful information from topoJSON files. \n",
    "\n",
    "\n",
    "\n",
    "Author: D. Ellis 2021\n",
    "'''\n",
    "None"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b88d4b62",
   "metadata": {},
   "outputs": [],
   "source": [
    "import geopandas as gpd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7386b896",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AREACD</th>\n",
       "      <th>AREANM</th>\n",
       "      <th>geometry</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>E06000060</td>\n",
       "      <td>Buckinghamshire</td>\n",
       "      <td>POLYGON ((-0.84276 51.54472, -0.84704 51.54522...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>E06000001</td>\n",
       "      <td>Hartlepool</td>\n",
       "      <td>POLYGON ((-1.24097 54.72322, -1.22496 54.71480...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>E06000002</td>\n",
       "      <td>Middlesbrough</td>\n",
       "      <td>MULTIPOLYGON (((-1.19432 54.57436, -1.19059 54...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>E06000003</td>\n",
       "      <td>Redcar and Cleveland</td>\n",
       "      <td>POLYGON ((-0.79431 54.55844, -0.79555 54.55489...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>E06000004</td>\n",
       "      <td>Stockton-on-Tees</td>\n",
       "      <td>POLYGON ((-1.25063 54.62535, -1.24567 54.62601...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      AREACD                AREANM  \\\n",
       "0  E06000060       Buckinghamshire   \n",
       "1  E06000001            Hartlepool   \n",
       "2  E06000002         Middlesbrough   \n",
       "3  E06000003  Redcar and Cleveland   \n",
       "4  E06000004      Stockton-on-Tees   \n",
       "\n",
       "                                            geometry  \n",
       "0  POLYGON ((-0.84276 51.54472, -0.84704 51.54522...  \n",
       "1  POLYGON ((-1.24097 54.72322, -1.22496 54.71480...  \n",
       "2  MULTIPOLYGON (((-1.19432 54.57436, -1.19059 54...  \n",
       "3  POLYGON ((-0.79431 54.55844, -0.79555 54.55489...  \n",
       "4  POLYGON ((-1.25063 54.62535, -1.24567 54.62601...  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gdf = gpd.GeoDataFrame.from_file('topography.json') # lad boundaries 2020\n",
    "gdf.drop('id', axis=1,inplace=True)\n",
    "gdf.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9d9aea01",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AREACD</th>\n",
       "      <th>AREANM</th>\n",
       "      <th>geometry</th>\n",
       "      <th>minx</th>\n",
       "      <th>miny</th>\n",
       "      <th>maxx</th>\n",
       "      <th>maxy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>E06000060</td>\n",
       "      <td>Buckinghamshire</td>\n",
       "      <td>POLYGON ((-0.84276 51.54472, -0.84704 51.54522...</td>\n",
       "      <td>-1.140764</td>\n",
       "      <td>51.485807</td>\n",
       "      <td>-0.476706</td>\n",
       "      <td>52.081553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>E06000001</td>\n",
       "      <td>Hartlepool</td>\n",
       "      <td>POLYGON ((-1.24097 54.72322, -1.22496 54.71480...</td>\n",
       "      <td>-1.380934</td>\n",
       "      <td>54.621971</td>\n",
       "      <td>-1.164091</td>\n",
       "      <td>54.727176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>E06000002</td>\n",
       "      <td>Middlesbrough</td>\n",
       "      <td>MULTIPOLYGON (((-1.19432 54.57436, -1.19059 54...</td>\n",
       "      <td>-1.285556</td>\n",
       "      <td>54.501089</td>\n",
       "      <td>-1.137313</td>\n",
       "      <td>54.590699</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>E06000003</td>\n",
       "      <td>Redcar and Cleveland</td>\n",
       "      <td>POLYGON ((-0.79431 54.55844, -0.79555 54.55489...</td>\n",
       "      <td>-1.200944</td>\n",
       "      <td>54.487805</td>\n",
       "      <td>-0.794311</td>\n",
       "      <td>54.644085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>E06000004</td>\n",
       "      <td>Stockton-on-Tees</td>\n",
       "      <td>POLYGON ((-1.25063 54.62535, -1.24567 54.62601...</td>\n",
       "      <td>-1.452295</td>\n",
       "      <td>54.464206</td>\n",
       "      <td>-1.158707</td>\n",
       "      <td>54.645240</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      AREACD                AREANM  \\\n",
       "0  E06000060       Buckinghamshire   \n",
       "1  E06000001            Hartlepool   \n",
       "2  E06000002         Middlesbrough   \n",
       "3  E06000003  Redcar and Cleveland   \n",
       "4  E06000004      Stockton-on-Tees   \n",
       "\n",
       "                                            geometry      minx       miny  \\\n",
       "0  POLYGON ((-0.84276 51.54472, -0.84704 51.54522... -1.140764  51.485807   \n",
       "1  POLYGON ((-1.24097 54.72322, -1.22496 54.71480... -1.380934  54.621971   \n",
       "2  MULTIPOLYGON (((-1.19432 54.57436, -1.19059 54... -1.285556  54.501089   \n",
       "3  POLYGON ((-0.79431 54.55844, -0.79555 54.55489... -1.200944  54.487805   \n",
       "4  POLYGON ((-1.25063 54.62535, -1.24567 54.62601... -1.452295  54.464206   \n",
       "\n",
       "       maxx       maxy  \n",
       "0 -0.476706  52.081553  \n",
       "1 -1.164091  54.727176  \n",
       "2 -1.137313  54.590699  \n",
       "3 -0.794311  54.644085  \n",
       "4 -1.158707  54.645240  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "''' Bounding Boxes '''\n",
    "gdf = gdf.merge(gdf.geometry.bounds,left_index=True,right_index=True)\n",
    "\n",
    "gdf.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "20ea8856",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AREACD</th>\n",
       "      <th>AREANM</th>\n",
       "      <th>geometry</th>\n",
       "      <th>minx</th>\n",
       "      <th>miny</th>\n",
       "      <th>maxx</th>\n",
       "      <th>maxy</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>E06000060</td>\n",
       "      <td>Buckinghamshire</td>\n",
       "      <td>POLYGON ((-0.84276 51.54472, -0.84704 51.54522...</td>\n",
       "      <td>-1.140764</td>\n",
       "      <td>51.485807</td>\n",
       "      <td>-0.476706</td>\n",
       "      <td>52.081553</td>\n",
       "      <td>51.785322</td>\n",
       "      <td>-0.812105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>E06000001</td>\n",
       "      <td>Hartlepool</td>\n",
       "      <td>POLYGON ((-1.24097 54.72322, -1.22496 54.71480...</td>\n",
       "      <td>-1.380934</td>\n",
       "      <td>54.621971</td>\n",
       "      <td>-1.164091</td>\n",
       "      <td>54.727176</td>\n",
       "      <td>54.669478</td>\n",
       "      <td>-1.259154</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>E06000002</td>\n",
       "      <td>Middlesbrough</td>\n",
       "      <td>MULTIPOLYGON (((-1.19432 54.57436, -1.19059 54...</td>\n",
       "      <td>-1.285556</td>\n",
       "      <td>54.501089</td>\n",
       "      <td>-1.137313</td>\n",
       "      <td>54.590699</td>\n",
       "      <td>54.541991</td>\n",
       "      <td>-1.222434</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>E06000003</td>\n",
       "      <td>Redcar and Cleveland</td>\n",
       "      <td>POLYGON ((-0.79431 54.55844, -0.79555 54.55489...</td>\n",
       "      <td>-1.200944</td>\n",
       "      <td>54.487805</td>\n",
       "      <td>-0.794311</td>\n",
       "      <td>54.644085</td>\n",
       "      <td>54.551701</td>\n",
       "      <td>-1.020910</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>E06000004</td>\n",
       "      <td>Stockton-on-Tees</td>\n",
       "      <td>POLYGON ((-1.25063 54.62535, -1.24567 54.62601...</td>\n",
       "      <td>-1.452295</td>\n",
       "      <td>54.464206</td>\n",
       "      <td>-1.158707</td>\n",
       "      <td>54.645240</td>\n",
       "      <td>54.561628</td>\n",
       "      <td>-1.332462</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      AREACD                AREANM  \\\n",
       "0  E06000060       Buckinghamshire   \n",
       "1  E06000001            Hartlepool   \n",
       "2  E06000002         Middlesbrough   \n",
       "3  E06000003  Redcar and Cleveland   \n",
       "4  E06000004      Stockton-on-Tees   \n",
       "\n",
       "                                            geometry      minx       miny  \\\n",
       "0  POLYGON ((-0.84276 51.54472, -0.84704 51.54522... -1.140764  51.485807   \n",
       "1  POLYGON ((-1.24097 54.72322, -1.22496 54.71480... -1.380934  54.621971   \n",
       "2  MULTIPOLYGON (((-1.19432 54.57436, -1.19059 54... -1.285556  54.501089   \n",
       "3  POLYGON ((-0.79431 54.55844, -0.79555 54.55489... -1.200944  54.487805   \n",
       "4  POLYGON ((-1.25063 54.62535, -1.24567 54.62601... -1.452295  54.464206   \n",
       "\n",
       "       maxx       maxy        lat       lon  \n",
       "0 -0.476706  52.081553  51.785322 -0.812105  \n",
       "1 -1.164091  54.727176  54.669478 -1.259154  \n",
       "2 -1.137313  54.590699  54.541991 -1.222434  \n",
       "3 -0.794311  54.644085  54.551701 -1.020910  \n",
       "4 -1.158707  54.645240  54.561628 -1.332462  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "''' Centroid '''\n",
    "centroids = gdf.centroid\n",
    "gdf['lat'] = centroids.y\n",
    "gdf['lon'] = centroids.x\n",
    "\n",
    "gdf.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2fa5e5da",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'\\nLets find all neigbouring areas and overlaps\\n'"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "Lets find all neigbouring areas and overlaps\n",
    "'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "20313fd2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AREACD</th>\n",
       "      <th>AREANM</th>\n",
       "      <th>geometry</th>\n",
       "      <th>minx</th>\n",
       "      <th>miny</th>\n",
       "      <th>maxx</th>\n",
       "      <th>maxy</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "      <th>neighbors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>E06000060</td>\n",
       "      <td>Buckinghamshire</td>\n",
       "      <td>POLYGON ((-0.84276 51.54472, -0.84704 51.54522...</td>\n",
       "      <td>-1.140764</td>\n",
       "      <td>51.485807</td>\n",
       "      <td>-0.476706</td>\n",
       "      <td>52.081553</td>\n",
       "      <td>51.785322</td>\n",
       "      <td>-0.812105</td>\n",
       "      <td>[Milton Keynes, Cherwell, South Oxfordshire, T...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>E06000001</td>\n",
       "      <td>Hartlepool</td>\n",
       "      <td>POLYGON ((-1.24097 54.72322, -1.22496 54.71480...</td>\n",
       "      <td>-1.380934</td>\n",
       "      <td>54.621971</td>\n",
       "      <td>-1.164091</td>\n",
       "      <td>54.727176</td>\n",
       "      <td>54.669478</td>\n",
       "      <td>-1.259154</td>\n",
       "      <td>[Stockton-on-Tees, County Durham]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>E06000002</td>\n",
       "      <td>Middlesbrough</td>\n",
       "      <td>MULTIPOLYGON (((-1.19432 54.57436, -1.19059 54...</td>\n",
       "      <td>-1.285556</td>\n",
       "      <td>54.501089</td>\n",
       "      <td>-1.137313</td>\n",
       "      <td>54.590699</td>\n",
       "      <td>54.541991</td>\n",
       "      <td>-1.222434</td>\n",
       "      <td>[Stockton-on-Tees, Hambleton, Redcar and Cleve...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>E06000003</td>\n",
       "      <td>Redcar and Cleveland</td>\n",
       "      <td>POLYGON ((-0.79431 54.55844, -0.79555 54.55489...</td>\n",
       "      <td>-1.200944</td>\n",
       "      <td>54.487805</td>\n",
       "      <td>-0.794311</td>\n",
       "      <td>54.644085</td>\n",
       "      <td>54.551701</td>\n",
       "      <td>-1.020910</td>\n",
       "      <td>[Middlesbrough, Hambleton, Scarborough]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>E06000004</td>\n",
       "      <td>Stockton-on-Tees</td>\n",
       "      <td>POLYGON ((-1.25063 54.62535, -1.24567 54.62601...</td>\n",
       "      <td>-1.452295</td>\n",
       "      <td>54.464206</td>\n",
       "      <td>-1.158707</td>\n",
       "      <td>54.645240</td>\n",
       "      <td>54.561628</td>\n",
       "      <td>-1.332462</td>\n",
       "      <td>[Hartlepool, Hambleton, County Durham, Darling...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      AREACD                AREANM  \\\n",
       "0  E06000060       Buckinghamshire   \n",
       "1  E06000001            Hartlepool   \n",
       "2  E06000002         Middlesbrough   \n",
       "3  E06000003  Redcar and Cleveland   \n",
       "4  E06000004      Stockton-on-Tees   \n",
       "\n",
       "                                            geometry      minx       miny  \\\n",
       "0  POLYGON ((-0.84276 51.54472, -0.84704 51.54522... -1.140764  51.485807   \n",
       "1  POLYGON ((-1.24097 54.72322, -1.22496 54.71480... -1.380934  54.621971   \n",
       "2  MULTIPOLYGON (((-1.19432 54.57436, -1.19059 54... -1.285556  54.501089   \n",
       "3  POLYGON ((-0.79431 54.55844, -0.79555 54.55489... -1.200944  54.487805   \n",
       "4  POLYGON ((-1.25063 54.62535, -1.24567 54.62601... -1.452295  54.464206   \n",
       "\n",
       "       maxx       maxy        lat       lon  \\\n",
       "0 -0.476706  52.081553  51.785322 -0.812105   \n",
       "1 -1.164091  54.727176  54.669478 -1.259154   \n",
       "2 -1.137313  54.590699  54.541991 -1.222434   \n",
       "3 -0.794311  54.644085  54.551701 -1.020910   \n",
       "4 -1.158707  54.645240  54.561628 -1.332462   \n",
       "\n",
       "                                           neighbors  \n",
       "0  [Milton Keynes, Cherwell, South Oxfordshire, T...  \n",
       "1                  [Stockton-on-Tees, County Durham]  \n",
       "2  [Stockton-on-Tees, Hambleton, Redcar and Cleve...  \n",
       "3            [Middlesbrough, Hambleton, Scarborough]  \n",
       "4  [Hartlepool, Hambleton, County Durham, Darling...  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# expandMultiPoly\n",
    "df = gdf.explode(index_parts=True)\n",
    "\n",
    "df.geometry = df.buffer(0)\n",
    "\n",
    "names = gdf.AREANM.values\n",
    "output = dict(zip(names,[[]]*len(names)))\n",
    "\n",
    "for index, row in df.iterrows():  \n",
    "    \n",
    "    \n",
    "    neighbors = np.array(df[df.geometry.touches(row['geometry'])].AREANM)\n",
    "    overlap = np.array(df[df.geometry.overlaps(row['geometry'])].AREANM)\n",
    "    neighbors = set(np.union1d(neighbors, overlap))\n",
    " \n",
    "    output[row.AREANM]= list((set(output[row.AREANM]) | neighbors )- set([row.AREANM]))\n",
    "\n",
    "\n",
    "\n",
    "gdf['neighbors']  = [output[x] for x in gdf.AREANM]\n",
    "gdf.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "8dc8311f",
   "metadata": {},
   "outputs": [],
   "source": [
    "''' Remove unwanted columns and write to file '''\n",
    "unwanted = ['geometry']\n",
    "\n",
    "for i in unwanted:\n",
    "    try:gdf.drop(i,axis=1,inplace=True)\n",
    "    except:None\n",
    "        \n",
    "    \n",
    "gdf.to_csv('area_summary.csv',index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "24fb25eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Fi'"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'Fi'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "480737e0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cd76d0e0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "76a97139",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
